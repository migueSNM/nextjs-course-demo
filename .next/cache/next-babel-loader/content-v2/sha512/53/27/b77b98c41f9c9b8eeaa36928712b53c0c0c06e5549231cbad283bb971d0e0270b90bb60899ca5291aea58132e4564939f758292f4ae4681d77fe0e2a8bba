{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/Documents/trainings/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://media-cdn.tripadvisor.com/media/photo-s/11/15/d5/56/shepperton-cafe-bar.jpg\",\n    title: \"A first meetup\",\n    address: \"Some address\",\n    description: \"Meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://migue:rqc6ksZntgbh2MEy@cluster0.mjdgk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  console.log({\n    meetupId\n  });\n  return {\n    props: {\n      meetup: {\n        image: 'https://media-cdn.tripadvisor.com/media/photo-s/11/15/d5/56/shepperton-cafe-bar.jpg',\n        id: meetupId,\n        title: 'A first meetup',\n        address: 'Some address',\n        description: 'Meetup description'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/user/Documents/trainings/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,qFADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAC,cAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,qGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAE7C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA;AAAD,GAAZ;AACA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLR,MAAAA,MAAM,EAAE;AACNS,QAAAA,KAAK,EAAE,qFADD;AAENC,QAAAA,EAAE,EAAER,QAFE;AAGNS,QAAAA,KAAK,EAAE,gBAHD;AAINC,QAAAA,OAAO,EAAE,cAJH;AAKNC,QAAAA,WAAW,EAAE;AALP;AADH;AADF,GAAP;AAWD;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb'\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\n\nconst MeetupDetails = () => {\n  return (\n    <MeetupDetail \n      image='https://media-cdn.tripadvisor.com/media/photo-s/11/15/d5/56/shepperton-cafe-bar.jpg'\n      title='A first meetup'\n      address='Some address'\n      description='Meetup description'\n    />\n  )\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://migue:rqc6ksZntgbh2MEy@cluster0.mjdgk.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n  client.close()\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n  }\n}\n\nexport async function getStaticProps (context) {\n  \n  // fetch data for single meetup\n\n  const meetupId = context.params.meetupId\n\n  console.log({meetupId})\n  return {\n    props: {\n      meetup: {\n        image: 'https://media-cdn.tripadvisor.com/media/photo-s/11/15/d5/56/shepperton-cafe-bar.jpg',\n        id: meetupId,\n        title: 'A first meetup',\n        address: 'Some address',\n        description: 'Meetup description'\n      }\n    }\n  }\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}