{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/Documents/trainings/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetup.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetup.image,\n      title: props.meetup.title,\n      description: props.meetup.description,\n      address: props.meetup.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://migue:rqc6ksZntgbh2MEy@cluster0.mjdgk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://migue:rqc6ksZntgbh2MEy@cluster0.mjdgk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log({\n    meetupId\n  });\n  return {\n    props: {\n      meetup: {\n        id: meetup._id.toString(),\n        address: meetup.address,\n        title: meetup.title,\n        description: meetup.description,\n        image: meetup.image\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/user/Documents/trainings/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetup","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","findOne","console","log","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,MAAN,CAAaC;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaE;AAFxB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaG,KADtB;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,MAAN,CAAaC,KAFtB;AAGE,MAAA,WAAW,EAAEF,KAAK,CAACC,MAAN,CAAaE,WAH5B;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACC,MAAN,CAAaI;AAJxB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAiBD,CAlBD;;AAoBA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,qGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYlB,MAAM,KAAK;AAACmB,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEpB,MAAM,CAACa,GAAP,CAAWQ,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAE7C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,qGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMV,MAAM,GAAG,MAAMS,iBAAiB,CAACe,OAAlB,CAA0B;AAACX,IAAAA,GAAG,EAAEjB,QAAQ,CAACwB,QAAD;AAAd,GAA1B,CAArB;AAEAd,EAAAA,MAAM,CAACS,KAAP;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACN,IAAAA;AAAD,GAAZ;AACA,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACN2B,QAAAA,EAAE,EAAE3B,MAAM,CAACa,GAAP,CAAWQ,QAAX,EADE;AAENjB,QAAAA,OAAO,EAAEJ,MAAM,CAACI,OAFV;AAGNH,QAAAA,KAAK,EAAED,MAAM,CAACC,KAHR;AAINC,QAAAA,WAAW,EAAEF,MAAM,CAACE,WAJd;AAKNC,QAAAA,KAAK,EAAEH,MAAM,CAACG;AALR;AADH;AADF,GAAP;AAWD;AAED,eAAeL,aAAf","sourcesContent":["import Head from 'next/head'\nimport { MongoClient, ObjectId } from 'mongodb'\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\n\nconst MeetupDetails = (props) => {\n  return (\n    <>\n      <Head>\n        <title>{props.meetup.title}</title>\n        <meta \n          name=\"description\" \n          content={props.meetup.description}\n        />\n      </Head>\n      <MeetupDetail \n        image={props.meetup.image}\n        title={props.meetup.title}\n        description={props.meetup.description}\n        address={props.meetup.address}\n      />\n    </>\n  )\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://migue:rqc6ksZntgbh2MEy@cluster0.mjdgk.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n  client.close()\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n  }\n}\n\nexport async function getStaticProps (context) {\n  \n  // fetch data for single meetup\n\n  const meetupId = context.params.meetupId\n\n  const client = await MongoClient.connect('mongodb+srv://migue:rqc6ksZntgbh2MEy@cluster0.mjdgk.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\n\n  client.close()\n\n  console.log({meetupId})\n  return {\n    props: {\n      meetup: {\n        id: meetup._id.toString(),\n        address: meetup.address,\n        title: meetup.title,\n        description: meetup.description,\n        image: meetup.image,\n      }\n    }\n  }\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}